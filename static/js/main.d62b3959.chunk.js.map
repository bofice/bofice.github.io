{"version":3,"sources":["api/Request.js","api/jsonplaceholder.js","components/cards.js","components/banner.js","App.js","reportWebVitals.js","index.js"],"names":["requests","fetchComments","jsonplaceholder","axios","create","baseUrl","time","Date","Cards","props","string","n","comment","index","useState","truc","setTruc","Container","CardComponent","style","width","margin","backgroundColor","padding","marginTop","marginLeft","Avatar","name","charAt","toUpperCase","email","id","body","length","console","log","substr","Button","size","onClick","variant","paddingTop","getDate","Number","getMonth","getFullYear","getHours","getMinutes","styled","div","Banner","comments","next","setNext","prev","setPrev","slice","map","Pagination","position","App","setComments","useEffect","a","get","request","data","fetchImages","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62b3959.chunk.js","sourcesContent":["const requests = {\r\n  fetchComments: \"https://jsonplaceholder.typicode.com/comments\",\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\nconst jsonplaceholder = axios.create({\r\n  baseUrl: \"https://jsonplaceholder.typicode.com/\",\r\n});\r\nexport default jsonplaceholder;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nlet DEFAULT_PARA_LIMIT = 50;\r\nlet Max_PARA_LIMIT = 1000;\r\n\r\nvar time = new Date();\r\n\r\nfunction Cards(props) {\r\n  let { comment } = props;\r\n  let { index } = props;\r\n\r\n  const [truc, setTruc] = useState(DEFAULT_PARA_LIMIT);\r\n\r\n  function truncate(string, n) {\r\n    if (string?.length) {\r\n      console.log(string.length);\r\n    }\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  function relaseTrunc() {\r\n    console.log(comment);\r\n    setTruc(Max_PARA_LIMIT);\r\n    if (truc > DEFAULT_PARA_LIMIT) {\r\n      return setTruc(DEFAULT_PARA_LIMIT);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <CardComponent\r\n          style={{\r\n            width: \"95%\",\r\n            margin: \"10px\",\r\n            backgroundColor: \"white\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <div style={{ marginTop: \"10px\", marginLeft: \"10px\" }}>\r\n            <div>\r\n              <Avatar style={{ backgroundColor: \"#e53f64\" }}>\r\n                {comment.name.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n            </div>\r\n            <div style={{ marginTop: \"35%\", marginLeft: \"14px\" }}>{index}</div>\r\n          </div>\r\n          <div style={{ margin: \"10px\" }}>\r\n            <div>\r\n              <div>\r\n                From :{\" \"}\r\n                <span>\r\n                  {\" \"}\r\n                  <span key={comment.id}>{comment.email}</span>\r\n                </span>\r\n              </div>\r\n              <div>\r\n                Subject : <span>{comment.name}</span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <p>{truncate(` ${comment.body}`, truc)}</p>\r\n            </div>\r\n            <Button\r\n              style={{ size: \"10px\" }}\r\n              onClick={relaseTrunc}\r\n              variant=\"contained\"\r\n            >\r\n              {truc === DEFAULT_PARA_LIMIT ? \"readmore\" : \"readless\"}\r\n            </Button>{\" \"}\r\n            <div style={{ paddingTop: \"10px\" }}>\r\n              {time.getDate() +\r\n                \"/\" +\r\n                Number(time.getMonth() + 1) +\r\n                \"/\" +\r\n                time.getFullYear()}{\" \"}\r\n              {time.getHours() > 12 ? time.getHours() - 12 : time.getHours()}\r\n              {\":\" + time.getMinutes()}\r\n              {time.getHours() < 12 ? \"am\" : \"pm\"}\r\n            </div>\r\n          </div>\r\n        </CardComponent>\r\n      </header>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst CardComponent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 100px auto;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Cards from \"./cards\";\r\n\r\nfunction Banner(props) {\r\n  let { comments } = props;\r\n\r\n  const [next, setNext] = useState(10);\r\n  const [prev, setPrev] = useState(0);\r\n\r\n  const goToNextPage = () => {\r\n    setNext(next + 10);\r\n    setPrev(prev + 10);\r\n  };\r\n  const goToPrevPage = () => {\r\n    if (next > 10) {\r\n      setNext(next - 10);\r\n      setPrev(prev - 10);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          {comments.slice(prev, next).map((comment, index) => (\r\n            <div style={{ backgroundColor: \"whitesmoke\" }}>\r\n              <Cards comment={comment} index={comment.id} />\r\n            </div>\r\n          ))}\r\n          <Pagination style={{ position: \"sticky\" }}>\r\n            {next > 10 ? <div onClick={() => goToPrevPage()}>prev</div> : \"\"}\r\n            <div onClick={() => goToNextPage()}>next</div>\r\n          </Pagination>\r\n        </div>\r\n      </header>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n\r\n  @media (max-width: 360px) {\r\n    width: 100px;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  position: fixed;\r\n  bottom: 10px;\r\n  left: 100%;\r\n  width: 120px;\r\n  background: #e53f64;\r\n  color: white;\r\n  padding: 10px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\nimport requests from \"./api/Request\";\nimport jsonplaceholder from \"./api/jsonplaceholder\";\nimport Banner from \"./components/banner\";\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    async function fetchImages() {\n      const request = await jsonplaceholder.get(requests.fetchComments);\n      setComments(request.data);\n      return request;\n    }\n    fetchImages();\n  }, []);\n\n  console.log(comments, \"comments\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Banner comments={comments} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}